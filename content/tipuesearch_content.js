var tipuesearch = {"pages": [{'title': 'About', 'text': '41023132:\xa0 https://github.com/BX41023132/cd2024 \n 41039138:\xa0 https://github.com/GUJIAFENG/cd2024 \n \n \n 分組名單: \n 41023132林秉賢 \n 41039138凃家豐 \n \n 網頁:\xa0\xa0 https://mdecd2024.github.io/2b-midbg8/content/About.html \n 網誌:\xa0\xa0 https://mdecd2024.github.io/2b-midbg8/blog \n 簡報:\xa0 https://mdecd2024.github.io/2b-midbg8/reveal \n 倉儲:\xa0 https://github.com/mdecd2024/2b-midbg8 \n 本 cmsimde 網際內容管理系統的對應 Template 倉儲: \n https://github.com/mdecycu/cmsimde_site \n 此 Template 將 cmsimde 作為子目錄而非子模組, 使用者可以依照需求自行修改 \n 倉儲對應網站:  https://mde.tw/cmsimde_site \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'W4', 'text': '', 'tags': '', 'url': 'W4.html'}, {'title': '心得', 'text': '41023132:這次的翻譯作業東西非常的多，也因為我們這一組只有兩個人，所以工作量也比其他組大。 \n 我覺得翻譯這種事情很容易因為自己的理解，而有不同的意思，透過自己親身去翻譯才能悟出其中的道理。 \n 雖然翻譯需要很大量的時間和精神，但看到最終的結果也有滿滿的成就感。 \n 41039138:這次的作業要翻譯一篇英文文章，我們工作量分配是一人翻譯一半我負責下半部分，我們這組單一一人的工作量比其他組還要來的多我是負責下半部分的，雖然我們工作量多，但只要多去用不要讓自己閒下來，我覺進度不會比其他組慢。 \n', 'tags': '', 'url': '心得.html'}, {'title': 'HW', 'text': '41023132 林秉賢:P1-44 \n /downloads/41023132-P1-44.pdf \n 41039138 凃家豐:P45-87 \n /downloads/latex2.pdf \n /downloads/41039138翻譯中英並列.pdf \n 完整P1-87 \n /downloads/2b-midbg8-report.pdf \n', 'tags': '', 'url': 'HW.html'}, {'title': 'W5', 'text': '', 'tags': '', 'url': 'W5.html'}, {'title': '1-7影片統整(41023132)', 'text': '\n /downloads/1建個人課程倉儲.txt \n 1.學習如何從頭建立個人倉儲，對自己的個人倉儲進行維護。 \n \n /downloads/2如何從 Replit Account 設定 Connect 連結到 Github.txt \n 2.利用repilt推送資料到倉儲，學習如何將replit和github連動。 \n \n /downloads/3如何設定 Github 帳號的雙重認證.txt \n 3.為保護個人倉儲的安全及個資的問題，學習設定帳號的雙重認證。 \n \n \n /downloads/4說明如何將倉儲 import 至 Replit 改版後推回 github.txt \n 4.利用replit推送資料，並學習推送資料前的設定。 \n \n \n /downloads/5第一組組長建立 Team 並設定分組倉儲.txt \n 5.分組，最多8人一組，分完組別後，建立Team及分組倉儲。 \n \n /downloads/6從第一組空倉儲建立 cmsimde_site 內容.txt / \n 6.借用第六組的倉儲，設定網頁。 \n \n downloads/7利用 codespaces 維護分組網站.txt \n 7.之前有學利用replit維護個人網站，這次學習利用codespaces維護分組網站。 \n \n \n', 'tags': '', 'url': '1-7影片統整(41023132).html'}, {'title': '8-14影片統整(41039138)', 'text': '\n 8逐字稿.txt \n \n \n 9逐字稿.txt \n \n 10逐字稿.txt \n \n 11逐字稿.txt \n \n 12逐字稿.txt \n \n 13逐字稿.txt \n \n 14逐字稿.txt \n \n', 'tags': '', 'url': '8-14影片統整(41039138).html'}, {'title': 'W10', 'text': '\n 文章摘要 \n cd2024_2D Ball Balancer Control using QUARC \n \n 此文章是關於「2D 球平衡器實驗」的指導手冊。實驗的目標是穩定球在平衡板上的位置，並使用比例-積分-微分（PID）控制系統來滿足一組規格要求。實驗涵蓋了以下主題： \n -  從第一原理建立球的動態模型。 \n -  獲取系統的傳遞函數表示。 \n -  設計比例-速度（PV）補償器，以控制伺服負載軸的位置，符合某些時域要求。 \n -  設計比例-積分-微分（PID）補償器，調節樑上球的位置，滿足特定規格。這與伺服控制一起構成完整的球和樑串級控制系統。 \n -  探索控制技術，如設定點權重和積分反飽和。 \n -  使用植物模型模擬球和樑控制，確保滿足規格，並避免任何致動器飽和。 \n -  在 Quanser 2DBB 裝置上實施控制器並評估其性能。 \n \n 在先修條件方面，使用者應熟悉以下內容： \n -  數據收集卡（例如 Q2-USB）、功率放大器（例如 VoltPAQ）和 SRV02 的主要組件（例如致動器、感應器）。 \n -  SRV02 植物與放大器和 DAQ 設備的連線和操作程序。 \n -  在 Reference [ 6 ] 中描述的實驗室，以便熟悉在 SRV02 上使用 QUARC。 \n -  根據 Reference [ 8 ] 的要求為 SRV02 設計 PV 位置控制。 \n \n 該文件還包含了有關模型方程式、控制響應設計、實驗室程序和結果摘要等詳細內容。 \n \n Ball_on_the_plate_balancing_control_system  \n \n \xa0 文章中介紹了一個建構雙自由度球在盤系統實驗平台的設計,用於控制系統的學習和測試不穩定動態物體的平衡技術。該平台配備了電阻式觸控螢幕來獲取球的位置資料,步進電機和位置傳感器來調整平台傾斜角度,以及基於AVR微控制器的雙迴路從屬控制系統,內含PID控制器用於維持球的平衡位置。 \n \xa0  \n \xa0 \xa0該實驗平台的機械設計由木質基座、印刷成型的3D支撐塔、電阻式觸控螢幕、步進電機和位置反饋電位器組成。控制系統採用100Hz頻率操作,讀取球和平台傾斜角的資訊,並使用外環控制球位置、內環控制平台角度的從屬PID控制器設計。 \n \xa0 \xa0 \n \xa0 \xa0實驗結果顯示,控制系統能夠將鋼球帶回並維持在觸控螢幕的中心點,即使受到外部干擾。該實驗平台可用於測試控制算法,對於船舶、航空器等穩定性控制應用有一定參考價值。未來的工作包括改進反饋信號濾波以提高控制質量,以及探索更複雜的delta機器人控制問題。 \n \n Design and Implementation a Ball Balancing System for Control Theory Course  \n \n \xa0 這篇論說明在開發一個球在桿平衡系統,作為控制理論課程的教學工具。該系統使用微控制器和相關的控制算法,透過實時感測反饋來調整桿的角度,使球保持在預設位置平衡。 \n \n \xa0 作者設計了三代原型,並逐步優化了系統的穩定性、輕量化和便攜性。最終採用了木頭材質,包括一根安裝有伺服電機的桿、超聲波感測器、Arduino微控制器板和電路連接板。 \n \n \xa0 該系統採用PID控制算法,根據球的實際位置與預設點的偏差,調節桿的傾角以最小化誤差。還引入了自適應PID控制,根據誤差大小動態調整PID參數,提高控制效率。 \n \n \xa0 另外,作者開發了MATLAB介面程式,能夠實時獲取並繪製球的位置曲線,幫助學生理解反饗環控制原理。 \n \n \xa0 這個簡單的球平衡系統,集成了感測器、執行器、微控制器編程和控制算法等內容,非常適合用於控制理論課程的實踐教學,可以讓學生將理論知識與實際操作相結合,幫助培養實踐能力。該方法也可推廣應用於更複雜的控制系統。 \n \n Simulation_and_Experimental_Study_of_Ball_Position  \n \n \xa0 本篇論文針對雙軸平台上的球平衡控制系統,詳細設計並比較了三種控制結構:PD控制器、全狀態迴饋和具有狀態觀測器的全狀態迴饋。所有控制結構均採用相同的參數設計方法,針對預設的建立時間進行極點置換。 \n \n \xa0 首先導出了球在平台上的數學模型和傳遞函數,揭示了開環系統的本質不穩定性。接著設計了永磁直流電機的位置環用於控制平台傾角,並透過標準設計方法確保所需的動態回應。 \n \n \xa0 實驗平台由電阻式觸控屏、永磁直流電機、Kinetis K60數位控制器等組成。三種控制結構的仿真和實驗結果顯示,具有狀態觀測器的結構效果最佳,能夠有效抑制噪聲並實現穩定控制和軌跡追蹤。 \n \n \xa0 此外,文中還提供了相關的數學推導過程,以及詳細的控制系統設計方法。該球平衡平台不僅可用於驗證各種控制理論,還有助於讓學生更直觀地理解控制原理,結合理論知識與實踐操作,成為極具教學價值的系統。 \n \n A real time control system for balancing a ball on a platform with FPGA parallel implementation \n \n \xa0 本篇論文提出一種新的基於PID控制器的解決方案,可以在實時系統中精準控制球體在平台上的位置。首先,建立了球體在平台上的運動數學模型並推導出其傳遞函數。接著,設計了PID控制器用於平衡球體在平台上的位置。該PID控制器的實作採用了FPGA上的並行計算架構,可顯著提高計算效率。最後,通過Matlab仿真驗證了該控制系統調節球體在平台上位置的精度。該PID控制器設計可以應用於需要對多個參數進行高速實時控制的物件系統中。 \n \n Construction and theoretical study \n \xa0 \xa0  \n \xa0 \xa0這篇論文的摘要涵蓋了控制理論及其應用對動態系統的重要性，特別是在補償對於本身不穩定或半穩定系統施加的干擾和外部行為方面。通過建構一個實物裝置來展示理論，並進一步比較從牛頓力學中得出的實際物理和電腦模擬結果。為了進行比較，設計一個滿足系統要求的滿意控制器是必要的。在裝置和控制方面，引入了一個比例-積分-微分（PID）控制器，用於平衡平台上的球。進一步進行分析以確定在穩定自然不穩定或半穩定系統時的限制，並檢查這些限制與理論期望之間的差異。 \n \n \xa0 \xa0整篇論文中應用的控制是線性類型，僅能在線性控制範圍內正常運作。使用標準元件和微控制器，構建了一個裝置來維持平台上的球。通過使用Arduino庫和開源代碼進行編程。因此，出於研究目的，看看該裝置是否能夠在線性控制領域內正常運作。 \n \n \xa0 \xa0總之，這篇論文將首先通過計算機輔助程序來涵蓋球在平台上的理論模型。然後將理論結果與從實物構造中獲得的結果進行比較。進一步檢查控制理論和系統實施方面的差異原因。 \n \n \n', 'tags': '', 'url': 'W10.html'}, {'title': '鋼球平衡台零件繪製', 'text': '繪製分工 \n 41023132: \n /downloads/y_link.prt \n /downloads/s_link.prt \n /downloads/base.prt \n /downloads/shaft.prt \n \n 41039138: \n /downloads/platform.prt', 'tags': '', 'url': '鋼球平衡台零件繪製.html'}, {'title': 'W12實習與分工', 'text': '任務一\xa0NXOpen 實習項目 (41023132) \n /downloads/1.py \n /downloads/journal.py \n \n 任務二 分組倉儲設為評分倉儲的子模組(41039138) \n 2b 評分倉儲: \xa0 https://github.com/mdecd2024/2bstud-2bsite \n 任務三 cd2023 足球機器人網際場景模擬(41039138) \n \n \n', 'tags': '', 'url': 'W12實習與分工.html'}, {'title': '自評影片', 'text': '41023132林秉賢 \n \n \n 41039138凃家豐 \n 自評.txt \n \n \n', 'tags': '', 'url': '自評影片.html'}, {'title': 'cmsimde', 'text': "\n SMap  - SiteMap - 依照階次列出網站的所有頁面. \n EditA  - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本. \n Edit  - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式. \n Config  - Configure Site - 編輯頁面標題與管理者密碼. \n Search  - 動態頁面內容的關鍵字搜尋. \n IUpload  - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小. \n IList  - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案. \n FUpload  - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改. \n FList  - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案. \n Logout  - 登出頁面編輯模式. \n Convert  - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁. \n acp  - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲. \n SStatic  - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容. \n RStatic  - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站. \n 80  - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80. \n \n", 'tags': '', 'url': 'cmsimde.html'}, {'title': 'Replit', 'text': 'https://replit.com \n 利用 init_replit 指令安裝所需 Python 模組 chmod u+x init_replit ./init_replit \n On Replit: \n .replit: python3 main.py \n chmod u+x cms init_replit \n ./init_replit \n for cmsimde_site (not needed): git submodule update --init --recursive \n for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent \n password generator:\xa0 https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py \xa0 \n \n for IPv6 only Ubuntu: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.com ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p for Replit: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.co #since Replit works for IPv4, therefore no ProxyCommand setting needed #ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};