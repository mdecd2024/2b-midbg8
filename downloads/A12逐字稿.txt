現在在第六組的範例上
我們剛剛做了什麼呢
我們剛剛是把
你假如看Code Spaces
我們需要建立一個latex的目錄
然後把這些檔案把它upload上去
所以我是先
我是先在其中的一個檔案按住
然後按我要新增目錄
這樣才會跟它同位階
這邊要特別注意
所以意思就是說
我的這個latex是這樣建的
可是你建了一個空目錄之後
你就可以按滑鼠右鍵
這個真的滿方便的
你有了這個之後
你可以按上傳
然後選近端的檔案
我剛剛就直接利用這個C:/tmp下面
我下載之後
我把那個latex的範例
我把它展開成這樣
這個要新建
這個本來就有
然後這個也要新建
不過這個有兩層目錄
所以我們現在是先把
latex裡面的檔案先送上去
然後你選
然後全選
它一下子就把它丟上去了
所以它這些.tex的檔案全部上來
Images也是一樣
你選滑鼠右鍵
然後按上傳
然後你再跑到你解開目錄的地方
然後你再進入Images
然後你再Ctrl+A
它一下子就全上去了
速度滿快
剩下來這個就要小心了
這個是兩個
當然你也可以直接在
你也可以直接在倉儲上面建
你要建這個部分
你就先建一個點
這裡有一個小點
點GitHub
然後裡面再建一個子目錄
然後最後再把這個檔案送上去
我剛才是已經有在線上
用到它的檔案
所以我這裡給我git pull看看
所以你這裡
你今天在其他地方有處理的話
我就可以把它Pool下來
它其實已經
我進到它的倉儲
它的Action已經被我啟動了
因為我現在有這個檔案
然後這個檔案
我們必須要稍微看一下
它在幹嘛
它這邊的意思是說
假如我們有一個分支
叫做PDF的話
所以這個分支就很重要了
你在協同裡面
因為我們一組有八個人
而且我們要求你做的東西
是比以前還要更細膩的
以前是沒有一起設置子模組的
可是你這個學期設置子模組之後
你可以比較簡單的
在個人的目錄下來獨立工作
所以你就不會互相干擾
可是你的主要的分組倉儲
還是得要想辦法來協同
所以這裡的意思就是說
假如我的主倉儲
有一個分支叫PDF的話
你只要Push過來
或者有Pool request
也是丟到合併到PDF這個分支的話
它就會Trigger
它就會開始轉檔
因為我們有第十行
所以意思就是說
你不一定要用上面這個方式來執行
你可以直接到Action
直接點它
我剛剛就這樣做了
裡面做了什麼呢
裡面我們就是利用這一個
這個是內建的
它可以讓我們來安裝一個inbunto
然後把這些東西裝進來
這個等同是我們在Window
其實已經幫你配好了
它只是因為它裡面
每一次執行都要重新安裝
包括安裝texlife
這個是一個編譯
latex程式的一個套件
然後後面有一些模組
有一些字型
其實最關鍵的就是要執行兩次
為什麼要執行兩次以上
因為第一次
它按照你的次序由上往下讀
它只得到你有幾個圖
每一張圖的序號它知道了
可是沒有寫進去
因為它已經讀過了
所以第二次才把這樣的序號
把它寫入到前面的
已經編譯好的文章
有些更複雜的架構
還要編譯第三次
我們這個比較簡單
其實兩次就可以完成文件
至於底下這邊大概就是
我們用的也都是別人的套件
就把你轉好的檔
假如你沒有後面這些
你轉好檔其實它只是暫存而已
它不會讓你看見
你可以把它下載
可是我們要它發佈出來
而且是用版號發佈
所以我們發佈的版號
其實就是用這個檔案
用latex裡面的這個
所以我剛剛執行的部分是這樣
其實你每一組都弄好之後
你可以試試看
點Actions
因為我們有允許你來執行這個
所以你只需要跑到這裡來
所以意思就是說
我第一步先跑到這邊
第二步
因為它有可能我們有一個
兩個以上的這個程式
可以在線上執行
可是我們現在要執行的是這個
所以我們先選這個再選這個
緊接著就拉出來說你給我執行
它大概要花兩三分鐘
三四分鐘它才會完成
所以表示說這邊已經轉檔完成
檔案會在哪裡
檔案就會跑到發佈區
所以我剛才已經幫它發佈了第一版
這個通常是每個人都完稿之後
每個人都已經把它的章節都處理好
我想要試試看格式長怎樣
你就可以直接把它轉出來
其實除了字型跟Window有一點不一樣以外
其他的內容都一樣
而且這個目錄摘要的部分
通通是這個可以點擊的
你可以比較一下它跟Window之間的差異
所以待會你各組弄好
趕快把你的至少封面可以處理好吧
然後你分工
翻譯的部分
就指到每個人的位置上
所以同樣的你也可以看到說
我們在這裡面
我們是抓同一個檔的
我們在這裡面是抓同一個檔
latex 同樣是latex
可是因為它字型不一樣
所以這個的話就是Linux的
然後這一個的話
這一個有Window
底下這個有Window
可是這裡有一些暫存檔
其實我們剛剛沒有處理好
那怎麼處理
我們要處理的部分就是說
我假如直接在線上也可以處理
第一個部分就是
我要先編輯這個ignore
因為我們剛剛沒有把那些檔案弄掉
因為它並不應該出現在我們的倉儲裡面
所以我們把它逮出來
我們這個把它逮出來
然後我們來編譯這個.gitignore
它這邊有一個.gitignore
哪些檔案要忽視
所以我們編譯這個
然後我們看看要拿掉的檔案在哪裡
有aux要拿掉
所以我們來編輯它
AUX嗎
我們看一下aux
lof
還有沒有
好像有out對不對
是不是有out
然後還有一個toc
Table of Content的中間暫存檔
我們也不要
讓它進入倉儲
所以意思就是說我們這四種檔案
無論你產生在哪裡我都不要
PDF基本上可以把它留著
就是說你到時候假如轉好檔
所以我還有一個log
log我們也不要
所以是1、2、3、5個
所以這裡還有一個log
那怎麼弄呢 你把它提交出去
然後你再進來刪
你再進來把它刪掉
所以我們進來進來
然後就指定到我不要的檔案
我從這裡把它刪掉
所以我從這邊我就可以把它deliver
下一次它就不會出現
更好的是你在命令列來刪
就不用每一次提交
因為你在這邊我不曉得可不可以一次
刪掉好幾個檔 好像不行
所以你在操作系統上還是有好處
因為它這個畢竟是網際介面
可是待會我們這邊刪完之後
我們還要再回頭去git pull
否則的話你之前的內容
基本上還有這些檔
所以這個log把它刪掉
所以比較好的是在你近端
就直接把它處理掉
所以它這個沒有show出來
還在 這個是window
剛剛不是把它砍了嗎
還有嗎 還有兩個
所以變成說我們在近端
其實還是有好處
你可以一次把它刪掉提交一次就好
我們在這邊網際的部分
你要一個一個
已經全刪了
所以現在的檔案就是我們要的
然後我們這個時候
可以在這裡pull它會不見嗎
我們看一下 所以在這裡gitpull
拉下它最新的資料
所以它已經知道
它已經知道你不要這些這五個檔
它自動幫你把它
從我們目前在Code Spaces的環境
虛擬環境下把它刪掉
所以你再進來你就不會有那些檔
此後你不管轉幾次
那些檔只會存在你近端這裡
它不會進去了
所以我們再把這個
把它轉出來
所以你就可以看到
因為在上面轉檔很慢
大概要三分鐘
一般通常要大概三四分
所以通常你就看說
假如各自在近端
你可以安排一個轉檔環境
確定你的格式沒有錯
而且你近端的檔案非常簡單
你假如看的話
比方說負責寫introduction的人
很簡單
它前沿的部分章節
然後底下都是相關的格式
introduction還比較多
你假如看其中一張
都一樣 它也是有章節
因為它有比較多的圖
所以我們把這個也存起來
